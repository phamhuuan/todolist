{"version":3,"sources":["components/taskForm.js","components/taskControlSearch.js","components/taskControlSort.js","components/taskControl.js","components/taskItem.js","components/taskList.js","App.js","serviceWorker.js","index.js"],"names":["TaskForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isDisplayForm","onReceiveDisplayForm","onHandleSubmit","event","preventDefault","onSubmit","state","onChange","target","name","value","setState","defineProperty","onClear","status","id","task","nextProps","console","log","randomString","require","length","react_default","a","createElement","className","onClick","Form","Group","controlId","Label","Control","type","placeholder","as","Button","variant","Component","TaskControlSearch","onSearch","Col","sm","TaskControlSort","sortBy","sortValue","onSort","_this2","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","TaskControl","Row","taskControlSearch","taskControlSort","TaskItem","changeStatus","deleteTask","editTask","_this$props","index","showStatus","TaskList","onFilter","filterName","filterStatus","tasks","_this$state","elementTask","map","taskItem","key","Table","striped","bordered","hover","App","onDisplayForm","taskEditting","onShowForm","onCloseForm","data","generateId","push","findIndex","localStorage","setItem","JSON","stringify","splice","nameSearch","filter","toLowerCase","parseInt","sort","b","by","getItem","parse","indexOf","undefined","elementForm","taskForm","taskControl","taskList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0fbf374c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport '../App.css';\n\nclass TaskForm extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      // id: this.props.task === null ? '' : this.props.task.id,\n      // name: this.props.task === null ? '' : this.props.task.name,\n      // status: this.props.task === null ? true : this.props.task.status,\n      id: '',\n      name: '',\n      status: true,\n    };\n  }\n\n  componentWillMount(){\n    if(this.props.task && this.props.task.id !== null){\n      this.setState({\n        id: this.props.task.id,\n        name: this.props.task.name,\n        status: this.props.task.status\n      });\n    }else{\n      this.onClear();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps && nextProps.task){\n      this.setState({\n        id : nextProps.task.id,\n        name : nextProps.task.name,\n        status : nextProps.task.status\n      });\n    }else{\n      this.onClear();\n    }\n    console.log('componentWillReceiveProps');\n  }\n\n  isDisplayForm = () => {\n    this.props.onReceiveDisplayForm();\n  }\n\n  onHandleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n  }\n\n  onChange = (event) => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  onClear = () => {\n    this.setState({\n      name: '',\n      status: true,\n    });\n  }\n\n  generateId(){\n    var randomString = require('random-string');\n    return randomString({length: 20})+'-'+randomString({length: 20})+'-'+randomString({length: 20})+'-'+randomString({length: 20});\n  }\n  render(){\n    return (\n      <div className=\"panel panel-warning\">\n        <div className=\"panel-heading\">\n          <h3 className=\"panel-title\">\n            {this.props.task === null ? 'Thêm công việc' : 'Cập nhật công việc'}\n            <span className=\"fa fa-times-circle text-right\" onClick={this.isDisplayForm}></span>\n          </h3>\n        </div>\n        <div className=\"panel-body\">\n          <Form onSubmit={this.onHandleSubmit}>\n            <Form.Group controlId=\"jobName\">\n              <Form.Label>Tên</Form.Label>\n              <Form.Control type=\"text\" \n                            placeholder=\"Nhập tên công việc\"\n                            name=\"name\"\n                            value={this.state.name}\n                            onChange={this.onChange}/>\n            </Form.Group>\n            <Form.Group controlId=\"status\">\n              <Form.Label>Trạng thái</Form.Label>\n              <Form.Control as=\"select\"\n                            name=\"status\"\n                            value={this.state.status}\n                            onChange={this.onChange}>\n                <option value={true}>Kích hoạt</option>\n                <option value={false}>Ẩn</option>\n              </Form.Control>\n              <br/>\n              <div className=\"text-center\">\n                <Button type=\"submit\" variant=\"warning\">\n                  <span className=\"fa fa-plus mr-5\"></span>\n                  Lưu lại\n                </Button>&nbsp;\n                <Button type=\"button\" variant=\"danger\" onClick={this.onClear}>\n                  <span className=\"fa fa-close mr-5\"></span>\n                  Hủy bỏ\n                </Button>\n              </div>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default TaskForm;\n","import React, {Component} from 'react';\nimport {Col, Form, Button} from 'react-bootstrap';\nimport '../App.css';\n\nclass TaskControlSearch extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      name: ''\n    };\n  }\n  \n  onSearch = () => {\n    this.props.onSearch(this.state.name);\n  }\n\n  onChange = (event) => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render(){\n    var {name} = this.state;\n    return (\n      <Col sm={6}>\n        <div className=\"input-group\">\n          <Form.Control type=\"text\" \n                        placeholder=\"Search\" \n                        name=\"name\"\n                        value={name} \n                        onChange={this.onChange}/>\n          <span className=\"input-group-btn\">\n            <Button type=\"button\" variant=\"primary\" onClick={this.onSearch}>\n              <span className=\"fa fa-search mr-5\"></span>Tìm\n            </Button>\n          </span>\n        </div>\n      </Col>\n    );\n  };\n}\n\nexport default TaskControlSearch;","import React, {Component} from 'react';\nimport {Col} from 'react-bootstrap';\nimport '../App.css';\n\nclass TaskControlSort extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      value: 0\n    }\n  }\n  onClick = (sortBy, sortValue, value) => {\n    this.setState({\n      value: value,\n    });\n    this.props.onSort(sortBy, sortValue);\n  }\n  render(){\n    var {value} = this.state;\n    return (\n      <Col sm={6}>\n        <div className=\"dropdown\">\n          <button className=\"btn btn-primary dropdown-toggle\" \n                  type=\"button\" \n                  id=\"triggerId\" \n                  data-toggle=\"dropdown\" \n                  aria-haspopup=\"true\"\n                  aria-expanded=\"true\">\n            Sắp xếp\n            <span className=\"fa fa-caret-square-o-down ml-5\"></span>\n          </button>\n          <ul className=\"dropdown-menu\" aria-labelledby=\"triggerId\">\n            <li onClick={() => this.onClick('name', 1, 0)}>\n              {/* eslint-disable-next-line */}\n              <a role=\"button\" className={value === 0 ? 'sort-selected' : ''}>\n                <span className=\"fa fa-sort-alpha-asc pr-5\">\n                  Tên A-Z\n                </span>\n              </a>\n            </li>\n            <li onClick={() => this.onClick('name', -1, 1)}>\n              {/* eslint-disable-next-line */}\n              <a role=\"button\" className={value === 1 ? 'sort-selected' : ''}>\n                <span className=\"fa fa-sort-alpha-asc pr-5\">\n                  Tên Z-A\n                </span>\n              </a>\n            </li>\n            <li role=\"separator\" className=\"divider\"></li>\n            <li onClick={() => this.onClick('status', 1, 2)}>\n              {/* eslint-disable-next-line */}\n              <a role=\"button\" className={value === 2 ? 'sort-selected' : ''}>\n                Trạng thái kích hoạt\n              </a>\n            </li>\n            <li onClick={() => this.onClick('status', -1, 3)}>\n              {/* eslint-disable-next-line */}\n              <a role=\"button\" className={value === 3 ? 'sort-selected' : ''}>\n                Trạng thái ẩn\n              </a>\n            </li>\n          </ul>\n        </div>\n      </Col>\n    );\n  };\n}\n\nexport default TaskControlSort;","import React, {Component} from 'react';\nimport {Row} from 'react-bootstrap';\nimport '../App.css';\nimport TaskControlSearch from './taskControlSearch';\nimport TaskControlSort from './taskControlSort';\n\nclass TaskControl extends Component{\n  render(){\n    return (\n      <Row className=\"mt-10\">\n        <TaskControlSearch onSearch={this.props.onSearch}/>\n        <TaskControlSort onSort={this.props.onSort}/>\n      </Row>\n    );\n  };\n}\n\nexport default TaskControl;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport { Button } from 'react-bootstrap';\n\nclass TaskItem extends Component{\n  showStatus(){\n    return (\n      <span className={this.props.task.status === true ? \"label label-danger\" : \"label label-info\"}\n            onClick={this.changeStatus}>\n        {this.props.task.status === true ? 'Kích hoạt' : 'Ẩn'}\n      </span>\n    );\n  }\n\n  changeStatus = () => {\n    this.props.task.status = !this.props.task.status;\n    this.props.changeStatus(this.props.task);\n  }\n\n  deleteTask = () => {\n    this.props.deleteTask(this.props.task);\n  }\n\n  editTask = () => {\n    this.props.editTask(this.props.task);\n  }\n\n  render(){\n    var {task, index} = this.props;\n    return (\n      <tr>\n        <td>{index+1}</td>\n        <td>{task.name}</td>\n        <td className=\"text-center\"> \n          {this.showStatus()}\n        </td>\n        <td className=\"text-center\">\n          <Button variant=\"warning\" onClick={this.editTask}>\n            <span className=\"fa fa-pencil mr-5\"/>Sửa\n          </Button>&nbsp;\n          <Button variant=\"danger\" onClick={this.deleteTask}>\n            <span className=\"fa fa-trash mr-5\"/>Xóa\n          </Button>\n        </td>\n      </tr>\n    );\n  };\n}\n\nexport default TaskItem;","import React, {Component} from 'react';\nimport {Table, Form} from 'react-bootstrap';\nimport '../App.css';\nimport TaskItem from './taskItem';\n\nclass TaskList extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      filterName: '',\n      filterStatus: -1\n    }\n  }\n\n  changeStatus = (task) => {\n    this.props.changeStatus(task);\n  }\n\n  deleteTask = (task) => {\n    this.props.deleteTask(task);\n  }\n\n  editTask = (task) => {\n    this.props.editTask(task);\n  }\n\n  onChange = (event) => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    this.props.onFilter(\n      name === 'filterName' ? value : this.state.filterName,\n      name === 'filterStatus' ? value : this.state.filterStatus\n    );\n    this.setState({\n      [name]: value,\n    });\n  }\n  render(){\n    var {tasks} = this.props;//var tasks = this.props.task;\n    var {filterName, filterStatus} = this.state;\n    var elementTask = tasks.map((task, index) => {\n      return <TaskItem  key={task.id} \n                        index={index} \n                        task={task} \n                        changeStatus={this.changeStatus} \n                        deleteTask={this.deleteTask}\n                        editTask={this.editTask}/>\n    });\n    return (\n      <Table className=\"mt-10\" striped bordered hover>\n        <thead>\n          <tr>\n            <th className=\"text-center\">STT</th>\n            <th className=\"text-center\">Tên</th>\n            <th className=\"text-center\">Trạng thái</th>\n            <th className=\"text-center\">Hành động</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td></td>\n            <td>\n              <Form.Control type=\"text\" name=\"filterName\" value={filterName} onChange={this.onChange}></Form.Control>\n            </td>\n            <td>\n              <Form.Control as=\"select\" name=\"filterStatus\" value={filterStatus} onChange={this.onChange}>\n                <option value={-1}>Tất cả</option>\n                <option value={0} >Kích hoạt</option>\n                <option value={1} >Ẩn</option>\n              </Form.Control>\n            </td>\n            <td></td>\n          </tr>\n          {elementTask}\n        </tbody>\n      </Table>\n    );\n  };\n}\n\nexport default TaskList;","import React, {Component} from 'react';\nimport {Row, Col, Button} from 'react-bootstrap';\nimport './App.css';\nimport TaskForm from './components/taskForm';\nimport TaskControl from './components/taskControl';\nimport TaskList from './components/taskList';\n// import _ from 'lodash';//lam nhu the nay se import ca thu vien rat nang\nimport {filter, findIndex} from 'lodash';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      tasks: [],\n      isDisplayForm: false,\n      taskEditting: null,\n      filter: {\n        name: '',\n        status: -1,\n        nameSearch: '',\n      },\n      sort: {\n        by: 'name',\n        value: 1,\n      }\n    };\n  }\n\n  componentWillMount(){\n    if(localStorage && localStorage.getItem('tasks')){\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: tasks,\n      });\n    }\n  }\n\n  generateId(){\n    var randomString = require('random-string');\n    return randomString({length: 20})+'-'+randomString({length: 20})+'-'+randomString({length: 20})+'-'+randomString({length: 20});\n  }\n\n  onDisplayForm = () => {\n    this.setState({\n      isDisplayForm: this.state.taskEditting !== null ? true : !this.state.isDisplayForm,\n      taskEditting: null,\n    });\n  }\n\n  onShowForm = () => {\n    this.setState({\n      isDisplayForm: true,\n    });\n  }\n\n  onCloseForm = () => {\n    this.setState({\n      isDisplayForm: false,\n    });\n  }\n\n  onSubmit = (data) => {\n    var {tasks} = this.state;\n    data.status = data.status === 'true' || data.status === true ? true : false;\n    if(data.id === ''){\n      data.id = this.generateId();\n      tasks.push(data);\n    }\n    else{\n      // for(var index = 0; index < tasks.length; index++){//co the dung foreach\n      //   if(tasks[index].id === data.id){\n      //     tasks[index].status = data.status;\n      //     tasks[index].name = data.name;\n      //   }\n      // }//co the dung cach tren hoac dung lodash\n      var index = findIndex(tasks, (task) => {\n        return task.id === data.id;\n      });\n      tasks[index].status = data.status;\n      tasks[index].name = data.name;\n    }\n    this.setState({\n      tasks: tasks\n    });\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    this.onCloseForm();\n  }\n\n  changeStatus = (data) => {\n    var {tasks} = this.state;\n    var index = findIndex(tasks, (task) => {//k import _ nua nen k dung _.findIndex\n      return task.id === data.id;\n    });\n    tasks[index].status = data.status;\n    this.setState({\n      tasks: tasks\n    });\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  deleteTask = (data) => {\n    var {tasks} = this.state;\n    // var i = 0, newTasks = [];//cach1\n    // for(var index = 0; index < tasks.length; index++){//co the dung foreach\n    //   if(tasks[index].id === task.id){//cach1 === -> !==\n    //     // newTasks[i++] = tasks[index];//cach1\n    //     tasks.splice(index, 1);//cach2\n    //   }\n    // }\n    // this.setState({\n    //   // tasks: newTasks//cach1\n    // });\n    var index = findIndex(tasks, (task) => {\n      return task.id === data.id;\n    });\n    tasks.splice(index, 1);\n    this.onCloseForm();\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  editTask = (task) => {\n    this.onShowForm();\n    this.setState({\n      taskEditting: task\n    });\n  }\n\n  onSearch = (nameSearch) => {\n    this.setState({\n      filter: {\n        name: this.state.filter.name,\n        status: this.state.filter.status,\n        nameSearch: nameSearch.toLowerCase(),\n      },\n    },()=>{console.log(this.state.filter);});\n  }\n\n  onFilter = (filterName, filterStatus) => {\n    filterStatus = parseInt(filterStatus, 10);//goi +filterStatus se tu doi string -> number\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterStatus,\n        nameSearch: this.state.filter.nameSearch,\n      }\n    },()=>{console.log(this.state.filter);});\n  }\n\n  onSort = (sortBy, sortValue) => {\n    var tasks = this.state.tasks;\n    console.log(sortBy, sortValue);\n    if(sortBy === 'name'){\n      tasks.sort((a, b) => {\n        if(a.name > b.name) return sortValue;\n        else if(a.name < b.name) return -sortValue;\n        return 0;\n      });\n    }\n    else if(sortBy === 'status'){\n      tasks.sort((a, b) => {\n        if(a.status > b.status) return -sortValue;\n        else if(a.status < b.status) return sortValue;\n        return 0;\n      })\n    }\n    this.setState({\n      tasks: tasks\n    });\n  }\n\n  render(){\n    var {tasks, isDisplayForm, taskEditting} = this.state;//var tasks = this.state.tasks;\n    // console.log(filter);\n    if(filter){\n      if(filter.name){\n        tasks = tasks.filter((task) => {\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\n        });\n      }\n      // if(filter.nameSearch){\n      //   tasks = tasks.filter((task) => {\n      //     return task.name.toLowerCase().indexOf(filter.nameSearch) !== -1;\n      //   });\n      // }\n      tasks = filter(tasks, (task) => {\n        return task.name.toLowerCase().indexOf(filter.nameSearch) !== -1;\n      });\n      if(filter.status !== null || filter.status !== undefined){//neu if(filter.status) la dang kiem tra !== null !== undefined !== 0\n        //o day luc nao filter.status cung co gia tri r nen khong can if o day nua\n        tasks = tasks.filter((task) => {\n          // return task.status === -1 ? task : task.status === filter.status;\n          if(filter.status === -1) return task;\n          else return task.status === (filter.status === 1 ? false : true);\n        })\n      }\n    }\n    var elementForm = isDisplayForm ? <TaskForm onSubmit={this.onSubmit} \n                                                onReceiveDisplayForm={this.onDisplayForm} \n                                                task={taskEditting}/> : '';\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"text-center\">\n            <h1>Quản lý công việc</h1>\n            <hr/>\n          </div>\n          <Row>\n            <Col sm={isDisplayForm === true ? 4 : 0}>\n              {elementForm}\n            </Col>\n            <Col sm={isDisplayForm === true ? 8 : 12}>\n              <Button type=\"submit\" variant=\"primary\" onClick={this.onDisplayForm}>\n                <span className=\"fa fa-plus mr-5\"></span>Thêm công việc\n              </Button>\n              <br/>\n              <TaskControl onSearch={this.onSearch} onSort={this.onSort}/>\n              <TaskList tasks={tasks} \n                        changeStatus={this.changeStatus} \n                        deleteTask={this.deleteTask} \n                        editTask={this.editTask} \n                        onFilter={this.onFilter}/>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}